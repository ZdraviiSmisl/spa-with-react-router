{"ast":null,"code":"var _jsxFileName = \"C:\\\\React_Redux\\\\react_projects\\\\Multi-Page-SPA-project\\\\frontend\\\\src\\\\App.js\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./Pages/Home\";\nimport EventsPage from \"./Pages/Events\";\nimport EventDetailPage from \"./Pages/EventDetail\";\nimport NewEventPage from \"./Pages/NewEvent\";\nimport EditEventPage from \"./Pages/EditEvent\";\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 25\n  }, this)\n}, {\n  path: \"events\",\n  element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 30\n  }, this)\n}, {\n  path: \"events/eventId\",\n  element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 38\n  }, this)\n}, {\n  path: \"events/new\",\n  element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 34\n  }, this)\n}, {\n  path: \"events/eventId/edit\",\n  element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 43\n  }, this)\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"THat's working\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","jsxDEV","_jsxDEV","Fragment","_Fragment","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","App","children","_c","$RefreshReg$"],"sources":["C:/React_Redux/react_projects/Multi-Page-SPA-project/frontend/src/App.js"],"sourcesContent":["import { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./Pages/Home\";\nimport EventsPage from \"./Pages/Events\";\nimport EventDetailPage from \"./Pages/EventDetail\";\nimport NewEventPage from \"./Pages/NewEvent\";\nimport EditEventPage from \"./Pages/EditEvent\";\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nconst router = createBrowserRouter([\n  { path: \"/\", element: <HomePage /> },\n  { path: \"events\", element: <EventsPage /> },\n  { path: \"events/eventId\", element: <EventDetailPage /> },\n  { path: \"events/new\", element: <NewEventPage /> },\n  { path: \"events/eventId/edit\", element: <EditEventPage /> },\n]);\n\nfunction App() {\n  return (\n    <>\n      <h1>THat's working</h1>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,UAAU,MAAM,gBAAgB;AACvC,OAAOC,eAAe,MAAM,qBAAqB;AACjD,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,aAAa,MAAM,mBAAmB;;AAE7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,MAAM,GAAGX,mBAAmB,CAAC,CACjC;EAAEY,IAAI,EAAE,GAAG;EAAEC,OAAO,eAAEL,OAAA,CAACN,QAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAE,CAAC,EACpC;EAAEL,IAAI,EAAE,QAAQ;EAAEC,OAAO,eAAEL,OAAA,CAACL,UAAU;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAE,CAAC,EAC3C;EAAEL,IAAI,EAAE,gBAAgB;EAAEC,OAAO,eAAEL,OAAA,CAACJ,eAAe;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAE,CAAC,EACxD;EAAEL,IAAI,EAAE,YAAY;EAAEC,OAAO,eAAEL,OAAA,CAACH,YAAY;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAE,CAAC,EACjD;EAAEL,IAAI,EAAE,qBAAqB;EAAEC,OAAO,eAAEL,OAAA,CAACF,aAAa;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAE,CAAC,CAC5D,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EACb,oBACEV,OAAA,CAAAE,SAAA;IAAAS,QAAA,eACEX,OAAA;MAAAW,QAAA,EAAI;IAAc;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC,gBACvB,CAAC;AAEP;AAACG,EAAA,GANQF,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}