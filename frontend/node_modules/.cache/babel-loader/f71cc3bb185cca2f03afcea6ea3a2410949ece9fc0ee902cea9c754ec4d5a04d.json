{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nconst useHttp = () => {\n  _s();\n  const [isLoading, setIsloading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setIsloading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      applyData(data.events);\n      setIsloading(false);\n    } catch (error) {\n      setError(error.message || \"Somting went wrong\");\n    }\n  }, []);\n  return {\n    sendRequest,\n    isLoading,\n    error\n  };\n};\n_s(useHttp, \"vKD0TJM/F15X0VL0BNfzwB2UpOA=\");\nexport default useHttp;","map":{"version":3,"names":["useCallback","useState","useHttp","_s","isLoading","setIsloading","error","setError","sendRequest","requestConfig","applyData","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","events","message"],"sources":["C:/React_Redux/react_projects/Multi-Page-SPA-project/frontend/src/components/hooks/response-hook.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsloading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\r\n    setIsloading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch(requestConfig.url, {\r\n        method: requestConfig.method ? requestConfig.method : \"GET\",\r\n        headers: requestConfig.headers ? requestConfig.headers : {},\r\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      applyData(data.events);\r\n\r\n      setIsloading(false);\r\n    } catch (error) {\r\n      setError(error.message || \"Somting went wrong\");\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    sendRequest,\r\n    isLoading,\r\n    error,\r\n  };\r\n};\r\n\r\nexport default useHttp;\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMO,WAAW,GAAGR,WAAW,CAAC,OAAOS,aAAa,EAAEC,SAAS,KAAK;IAClEL,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACH,aAAa,CAACI,GAAG,EAAE;QAC9CC,MAAM,EAAEL,aAAa,CAACK,MAAM,GAAGL,aAAa,CAACK,MAAM,GAAG,KAAK;QAC3DC,OAAO,EAAEN,aAAa,CAACM,OAAO,GAAGN,aAAa,CAACM,OAAO,GAAG,CAAC,CAAC;QAC3DC,IAAI,EAAEP,aAAa,CAACO,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACT,aAAa,CAACO,IAAI,CAAC,GAAG;MAClE,CAAC,CAAC;MAEF,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCZ,SAAS,CAACW,IAAI,CAACE,MAAM,CAAC;MAEtBlB,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACkB,OAAO,IAAI,oBAAoB,CAAC;IACjD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLhB,WAAW;IACXJ,SAAS;IACTE;EACF,CAAC;AACH,CAAC;AAACH,EAAA,CAjCID,OAAO;AAmCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}