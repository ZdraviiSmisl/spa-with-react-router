{"ast":null,"code":"var _jsxFileName = \"C:\\\\React_Redux\\\\react_projects\\\\Multi-Page-SPA-project\\\\frontend\\\\src\\\\Pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport useHttp from \"../components/hooks/response-hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventsPage = () => {\n  _s();\n  const {\n    isFetching,\n    hasError,\n    sendReqest: fetchEvents\n  } = useHttp();\n  const [fetchedEvents, setFetchedEvents] = useState();\n  const transformData = objTransform => {\n    const fetchData = [];\n    for (const key in objTransform) {\n      fetchData.push({\n        id: key,\n        title: objTransform[key].title\n      });\n    }\n    setFetchedEvents(fetchData);\n  };\n  useEffect(() => {\n    async function fetchEvents() {\n      const response = fetch(\"http://localhost:8080/events\");\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isFetching && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 22\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(EventsPage, \"mmSg6NNREPckbq7wukb/WjrDv1A=\", false, function () {\n  return [useHttp];\n});\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useEffect","useState","useHttp","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","isFetching","hasError","sendReqest","fetchEvents","fetchedEvents","setFetchedEvents","transformData","objTransform","fetchData","key","push","id","title","response","fetch","children","fileName","_jsxFileName","lineNumber","columnNumber","error","message","_c","$RefreshReg$"],"sources":["C:/React_Redux/react_projects/Multi-Page-SPA-project/frontend/src/Pages/Events.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport useHttp from \"../components/hooks/response-hook\";\r\n\r\nconst EventsPage = () => {\r\n  const { isFetching, hasError, sendReqest: fetchEvents } = useHttp();\r\n  const [fetchedEvents, setFetchedEvents] = useState();\r\n\r\n  const transformData = (objTransform) => {\r\n    const fetchData = [];\r\n    for (const key in objTransform) {\r\n      fetchData.push({ id: key, title: objTransform[key].title });\r\n    }\r\n    setFetchedEvents(fetchData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchEvents() {\r\n      const response = fetch(\"http://localhost:8080/events\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {isFetching && <p>Loading Events</p>}\r\n      {error && <p>{error.message}</p>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventsPage;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC,UAAU;IAAEC,QAAQ;IAAEC,UAAU,EAAEC;EAAY,CAAC,GAAGV,OAAO,CAAC,CAAC;EACnE,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAEpD,MAAMc,aAAa,GAAIC,YAAY,IAAK;IACtC,MAAMC,SAAS,GAAG,EAAE;IACpB,KAAK,MAAMC,GAAG,IAAIF,YAAY,EAAE;MAC9BC,SAAS,CAACE,IAAI,CAAC;QAAEC,EAAE,EAAEF,GAAG;QAAEG,KAAK,EAAEL,YAAY,CAACE,GAAG,CAAC,CAACG;MAAM,CAAC,CAAC;IAC7D;IACAP,gBAAgB,CAACG,SAAS,CAAC;EAC7B,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd,eAAeY,WAAWA,CAAA,EAAG;MAC3B,MAAMU,QAAQ,GAAGC,KAAK,CAAC,8BAA8B,CAAC;IACxD;EACF,CAAC,CAAC;EAEF,oBACEnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,GACGf,UAAU,iBAAIL,OAAA;MAAAoB,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACnCC,KAAK,iBAAIzB,OAAA;MAAAoB,QAAA,EAAIK,KAAK,CAACC;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eAChC,CAAC;AAEP,CAAC;AAACpB,EAAA,CAxBID,UAAU;EAAA,QAC4CL,OAAO;AAAA;AAAA6B,EAAA,GAD7DxB,UAAU;AA0BhB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}